React Component

1) https://jscomplete.com/playground/rgs1.1

function Hello() {
  return React.createElement('div', null, 'Hi');
}

ReactDOM.render(
  <Hello />, 
  document.getElementById('mountNode'),
);
________________________________________________________

React Hook - State Hook

2) https://jscomplete.com/playground/rgs1.2

function Button() {
  const [counter, setCounter] = useState(0);
	return <button onClick={() => setCounter(counter+1)}>{counter}</button>;
}

ReactDOM.render(
  <Button />, 
  document.getElementById('mountNode'),
);

https://jscomplete.com/playground/rgs1.3 - buttona ot 5 po 2

_____________________________________________________________

One-way Data Flow

3) https://jscomplete.com/playground/rgs1.4

function Button(props) {
	return (
  	<button onClick={props.onClickFunction}>
      +{props.increment}
    </button>
  );
}

function Display(props) {
	return (
  	<div>{props.message}</div>
  );
}

function App() {
	const [counter, setCounter] = useState(0);
  const incrementCounter = () => setCounter(counter+1);
	return (
    <div>
      <Button onClickFunction={incrementCounter} increment={1} />
      <Display message={counter}/>
    </div>  
  );
}

_______________________________________________________________
Components Reusability

4) https://jscomplete.com/playground/rgs1.5

result in https://jscomplete.com/playground/rgs1.6

function Button(props) {
  const handleClick = () => props.onClickFunction(props.increment);
	return (
  	<button onClick={handleClick}>
      +{props.increment}
    </button>
  );
}

function Display(props) {
	return (
  	<div>{props.message}</div>
  );
}

function App() {
	const [counter, setCounter] = useState(0);
  const incrementCounter = (incrementValue) => setCounter(counter+incrementValue);
	return (
    <div>
      <Button onClickFunction={incrementCounter} increment={1} />
      <Button onClickFunction={incrementCounter} increment={5} />
      <Button onClickFunction={incrementCounter} increment={10} />
      <Button onClickFunction={incrementCounter} increment={100} />
      <Display message={counter}/>
    </div>  
  );
}

ReactDOM.render(
  <App />, 
  document.getElementById('mountNode'),
);

__________________________________________________________

Tree Reconciliation in Action

5) https://jscomplete.com/playground/rgs1.7

-> https://jscomplete.com/playground/rgs1.8

const render = () => {
  document.getElementById('mountNode').innerHTML = `
    <div>
      Hello HTML
      <input />
      <pre>${(new Date).toLocaleTimeString()}</pre>
    </div>
  `;

  ReactDOM.render(
    React.createElement(
      'div',
      null,
      'Hello React',
      React.createElement('input', null),
      React.createElement('pre', null, (new Date).toLocaleTimeString())
    ),
    document.getElementById('mountNode2')
  );
};

setInterval(render, 1000);

